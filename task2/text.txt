2.1. Добавьте в класс LinkedList2 метод поиска первого узла по его значению.
find(val)
2.2. Добавьте в класс LinkedList2 метод поиска всех узлов по конкретному значению (возвращается список найденных узлов).

find_all(val)
2.3. Добавьте в класс LinkedList2 метод удаления одного узла по его значению.
delete(val, all=False)
где флажок all=False по умолчанию -- удаляем только первый нашедшийся элемент.

2.4. Дополните этот метод удалением всех узлов по конкретному значению (флажок all=True).

2.5. Добавьте в класс LinkedList2 метод вставки узла после заданного узла.
insert(afterNode, newNode)
Если afterNode = None и список пустой, добавьте новый элемент первым в списке.
Если afterNode = None и список непустой, добавьте новый элемент последним в списке.

2.6. Добавьте в класс LinkedList2 метод вставки узла самым первым элементом.
add_in_head(newNode)
2.7. Добавьте в класс LinkedList2 метод очистки всего содержимого (создание пустого списка) -- clean()

2.8. Добавьте в класс LinkedList2 метод вычисления текущей длины списка -- len()

2.9. Напишите проверочные тесты для каждого из предыдущих заданий.